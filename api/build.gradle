plugins {
  id 'org.springframework.boot' version '2.1.8.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'java'
  id "io.github.kobylynskyi.graphql.codegen" version "1.0"
}

group = 'com.ajmath'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'com.graphql-java:graphql-java:11.0'
  implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0'
  implementation 'com.google.guava:guava:26.0-jre'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'com.zhokhov.graphql:graphql-java-datetime:1.5.1'
  implementation 'com.google.code.gson:gson:2.8.5'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
  // ^ I realize having two JSON parsers isn't ideal but I needed to map Map<> to POJOs after already
  // writing the json parsing with gson and I could only find out out to do this with the jackson object mapper
  // In hindsight, I should have started with jackson-databind for the json parsing

  runtime 'com.graphql-java-kickstart:playground-spring-boot-starter:5.10.0'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

graphqlCodegen {
  graphqlSchemaPaths = [
    "$projectDir/src/main/resources/schema.graphqls".toString()
  ]
  outputDir = file("$projectDir/src/main/java-generated")
  packageName = "com.ajmath.cveexplorer.generated"
  customTypesMapping = [
    Date: "java.util.Date"
  ]
}
compileJava.dependsOn 'graphqlCodegen'
sourceSets.main.java.srcDir "$projectDir/src/main/java-generated"
