package com.ajmath.cveexplorer;

import com.ajmath.cveexplorer.generated.AffectedPackage;
import com.ajmath.cveexplorer.generated.Cve;
import com.ajmath.cveexplorer.generated.Severity;
import com.google.common.collect.Lists;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.LinkedList;
import java.util.List;
import java.util.stream.Collectors;

import static java.util.stream.Collectors.toList;
import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
public class CveDataStoreTests {

  @Test
  public void canLoadData() {
    CveDataStore store = new CveDataStore();
    store.init(); // This is loading test gzip CVE data from src/test/resources/cve-data

    List<Cve> data = store.stream().collect(toList());

    assertThat(data.size()).isEqualTo(2);

    assertThat(data.get(0).getId()).isEqualTo("CVE-2009-5158");
    assertThat(data.get(0).getDescription()).isEqualTo("The google-analyticator plugin before 5.2.1 for WordPress has insufficient HTML sanitization for Google Analytics API text.");
    assertThat(data.get(0).getSeverity()).isEqualTo(Severity.MEDIUM);

    List<AffectedPackage> packages = new LinkedList<>(data.get(0).getAffectedPackages());
    assertThat(packages).hasSize(1);
    assertThat(packages.get(0).getVendor()).isEqualTo("sumo");
    assertThat(packages.get(0).getProduct()).isEqualTo("google_analyticator");
    assertThat(packages.get(0).getVersions()).hasSize(47);

    assertThat(data.get(1).getId()).isEqualTo("CVE-2009-5157");
    assertThat(data.get(1).getDescription()).isEqualTo("On Linksys WAG54G2 1.00.10 devices, there is authenticated command injection via shell metacharacters in the setup.cgi c4_ping_ipaddr variable.");
    assertThat(data.get(1).getSeverity()).isEqualTo(Severity.HIGH);

    packages = new LinkedList<>(data.get(1).getAffectedPackages());
    assertThat(packages).hasSize(1);
    assertThat(packages.get(0).getVendor()).isEqualTo("linksys");
    assertThat(packages.get(0).getProduct()).isEqualTo("wag54g2_firmware");
    assertThat(packages.get(0).getVersions()).hasSize(1);
    assertThat(packages.get(0).getVersions()).contains("1.00.10");
  }
}
