import { useQuery } from "@apollo/react-hooks";
import { Box, CircularProgress, Container, Icon, Input, makeStyles } from "@material-ui/core";
import { loader } from "graphql.macro";
import * as React from "react";
import { CveInfoFragment, CveSearchInput, CveSearchQuery, CveSearchQueryVariables } from "../../gql-gen";
import { CveCard } from "./CveCard";

const CVE_SERACH = loader("./CveList.graphql");
const useCveSearch = (input?: CveSearchInput) => {
  return useQuery<CveSearchQuery, CveSearchQueryVariables>(CVE_SERACH, {
    variables: {
      input
    }
  });
};

const useStyles = makeStyles({
  cveContainer: {
    display: "flex",
    flexWrap: "wrap",
    justifyContent: "center",
  }
});

export const CveList: React.FC = () => {
  const classes = useStyles();
  const { data, loading, error } = useCveSearch({
    limit: 12
  });

  const cveResults: CveInfoFragment[] =
    data && data.cveSearch && data.cveSearch.results
      ? data.cveSearch.results
      : [];

  if (loading) {
    return <CircularProgress />;
  }

  if (error) {
    return <Icon>error</Icon>;
  }

  return (
    <Container>
      <Input placeholder="search" />
      <Box className={classes.cveContainer}>
        {cveResults.map(cve => (
          <CveCard key={cve.id} cve={cve} />
        ))}
      </Box>
    </Container>
  );
};
